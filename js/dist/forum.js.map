{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,mBCAlF,MAAM,EAA+BI,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,kC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCQxDC,IAAAA,aAAiBC,IAAI,+BAA+B,WAClD,IAAMC,EAA0B,SAACC,GAC/B,IAAMC,EAAMC,OAAOC,SAASC,OAASJ,EAErC,OACE,EAAC,IAAD,CACEK,KAAK,cACLC,QAAS,WCIF,IAA6BC,IDHdN,ECIvBO,UAAUC,UAKfD,UAAUC,UAAUC,UAAUH,GAxBI,SAACA,GACnC,IAAII,EAAWC,SAASC,cAAc,YACtCF,EAASG,MAAQP,EAGjBI,EAASI,MAAMC,IAAM,IACrBL,EAASI,MAAME,KAAO,IACtBN,EAASI,MAAMG,SAAW,QAE1BN,SAASO,KAAKC,YAAYT,GAC1BA,EAASU,QACTV,EAASW,SAETV,SAASW,YAAY,QAErBX,SAASO,KAAKK,YAAYb,EAC3B,CAIGc,CAA4BlB,GDHtBV,IAAAA,OAAW6B,KACT,CACEC,KAAM,WAER9B,IAAAA,WAAe+B,MAAM,kDAExB,GAEA/B,IAAAA,WAAe+B,MAAM,+CAG3B,GAEDC,EAAAA,EAAAA,QAAOC,IAAoB,gBAAgB,SAAUC,EAAOC,GAC1DD,EAAMjC,IAAI,WAAYC,EAAwBF,IAAAA,MAAUmC,WAAWA,IACpE,KAEDH,EAAAA,EAAAA,QAAOI,IAAc,gBAAgB,SAAUF,EAAOG,GACpDH,EAAMjC,IAAI,WAAYC,EAAwBF,IAAAA,MAAUqC,KAAKA,IAC9D,KAEDL,EAAAA,EAAAA,QAAOM,IAAc,gBAAgB,SAAUJ,EAAOK,GACpDL,EAAMjC,IAAI,WAAYC,EAAwBF,IAAAA,MAAUuC,KAAKA,IAC9D,GACF,G","sources":["webpack://@datlechin/flarum-copy-links/webpack/bootstrap","webpack://@datlechin/flarum-copy-links/webpack/runtime/compat get default export","webpack://@datlechin/flarum-copy-links/webpack/runtime/define property getters","webpack://@datlechin/flarum-copy-links/webpack/runtime/hasOwnProperty shorthand","webpack://@datlechin/flarum-copy-links/external root \"flarum.core.compat['forum/app']\"","webpack://@datlechin/flarum-copy-links/external root \"flarum.core.compat['common/extend']\"","webpack://@datlechin/flarum-copy-links/external root \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@datlechin/flarum-copy-links/external root \"flarum.core.compat['forum/utils/PostControls']\"","webpack://@datlechin/flarum-copy-links/external root \"flarum.core.compat['forum/utils/UserControls']\"","webpack://@datlechin/flarum-copy-links/external root \"flarum.core.compat['common/components/Button']\"","webpack://@datlechin/flarum-copy-links/./src/forum/index.js","webpack://@datlechin/flarum-copy-links/./src/forum/utils/copyTextToClipboard.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/DiscussionControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/PostControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/UserControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\nimport PostControls from 'flarum/forum/utils/PostControls';\nimport UserControls from 'flarum/forum/utils/UserControls';\nimport Button from 'flarum/common/components/Button';\nimport copyTextToClipboard from './utils/copyTextToClipboard';\n\napp.initializers.add('datlechin/flarum-copy-links', () => {\n  const CopyLinkButtonComponent = (route) => {\n    const url = window.location.origin + route;\n\n    return (\n      <Button\n        icon=\"fas fa-copy\"\n        onclick={() => {\n          copyTextToClipboard(url);\n\n          app.alerts.show(\n            {\n              type: 'success',\n            },\n            app.translator.trans('datlechin-copy-links.forum.link_copied_message')\n          );\n        }}\n      >\n        {app.translator.trans('datlechin-copy-links.forum.copy_link_button')}\n      </Button>\n    );\n  };\n\n  extend(DiscussionControls, 'userControls', function (items, discussion) {\n    items.add('copyLink', CopyLinkButtonComponent(app.route.discussion(discussion)));\n  });\n\n  extend(PostControls, 'userControls', function (items, post) {\n    items.add('copyLink', CopyLinkButtonComponent(app.route.post(post)));\n  });\n\n  extend(UserControls, 'userControls', function (items, user) {\n    items.add('copyLink', CopyLinkButtonComponent(app.route.user(user)));\n  });\n});\n","// Credit: https://stackoverflow.com/a/30810322\nconst fallbackCopyTextToClipboard = (text) => {\n  var textArea = document.createElement('textarea');\n  textArea.value = text;\n\n  // Avoid scrolling to bottom\n  textArea.style.top = '0';\n  textArea.style.left = '0';\n  textArea.style.position = 'fixed';\n\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  document.execCommand('copy');\n\n  document.body.removeChild(textArea);\n};\n\nexport default function copyTextToClipboard(text) {\n  if (!navigator.clipboard) {\n    fallbackCopyTextToClipboard(text);\n    return;\n  }\n\n  navigator.clipboard.writeText(text);\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","app","add","CopyLinkButtonComponent","route","url","window","location","origin","icon","onclick","text","navigator","clipboard","writeText","textArea","document","createElement","value","style","top","left","position","body","appendChild","focus","select","execCommand","removeChild","fallbackCopyTextToClipboard","show","type","trans","extend","DiscussionControls","items","discussion","PostControls","post","UserControls","user"],"sourceRoot":""}